<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [Roast Fish\Roast Fish.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image Roast Fish\Roast Fish.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6160001: Last Updated: Wed Mar 16 15:59:50 2022
<BR><P>
<H3>Maximum Stack Usage =        588 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; reloadSysStateFromFlash &rArr; saveSysStateToFlash &rArr; Flash_Write_Alignment64 &rArr; HAL_FLASH_Program &rArr; FLASH_Program_Fast
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[11]">ADC1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[11]">ADC1_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[11]">ADC1_IRQHandler</a> from startup_stm32g030xx.o(.text) referenced from startup_stm32g030xx.o(RESET)
 <LI><a href="#[10]">DMA1_Ch4_5_DMAMUX1_OVR_IRQHandler</a> from startup_stm32g030xx.o(.text) referenced from startup_stm32g030xx.o(RESET)
 <LI><a href="#[e]">DMA1_Channel1_IRQHandler</a> from startup_stm32g030xx.o(.text) referenced from startup_stm32g030xx.o(RESET)
 <LI><a href="#[f]">DMA1_Channel2_3_IRQHandler</a> from startup_stm32g030xx.o(.text) referenced from startup_stm32g030xx.o(RESET)
 <LI><a href="#[b]">EXTI0_1_IRQHandler</a> from startup_stm32g030xx.o(.text) referenced from startup_stm32g030xx.o(RESET)
 <LI><a href="#[c]">EXTI2_3_IRQHandler</a> from startup_stm32g030xx.o(.text) referenced from startup_stm32g030xx.o(RESET)
 <LI><a href="#[d]">EXTI4_15_IRQHandler</a> from startup_stm32g030xx.o(.text) referenced from startup_stm32g030xx.o(RESET)
 <LI><a href="#[9]">FLASH_IRQHandler</a> from startup_stm32g030xx.o(.text) referenced from startup_stm32g030xx.o(RESET)
 <LI><a href="#[3]">HardFault_Handler</a> from stm32g0xx_it.o(.text.HardFault_Handler) referenced from startup_stm32g030xx.o(RESET)
 <LI><a href="#[18]">I2C1_IRQHandler</a> from startup_stm32g030xx.o(.text) referenced from startup_stm32g030xx.o(RESET)
 <LI><a href="#[19]">I2C2_IRQHandler</a> from startup_stm32g030xx.o(.text) referenced from startup_stm32g030xx.o(RESET)
 <LI><a href="#[2]">NMI_Handler</a> from stm32g0xx_it.o(.text.NMI_Handler) referenced from startup_stm32g030xx.o(RESET)
 <LI><a href="#[5]">PendSV_Handler</a> from stm32g0xx_it.o(.text.PendSV_Handler) referenced from startup_stm32g030xx.o(RESET)
 <LI><a href="#[a]">RCC_IRQHandler</a> from startup_stm32g030xx.o(.text) referenced from startup_stm32g030xx.o(RESET)
 <LI><a href="#[8]">RTC_TAMP_IRQHandler</a> from startup_stm32g030xx.o(.text) referenced from startup_stm32g030xx.o(RESET)
 <LI><a href="#[1]">Reset_Handler</a> from startup_stm32g030xx.o(.text) referenced from startup_stm32g030xx.o(RESET)
 <LI><a href="#[1a]">SPI1_IRQHandler</a> from startup_stm32g030xx.o(.text) referenced from startup_stm32g030xx.o(RESET)
 <LI><a href="#[1b]">SPI2_IRQHandler</a> from startup_stm32g030xx.o(.text) referenced from startup_stm32g030xx.o(RESET)
 <LI><a href="#[4]">SVC_Handler</a> from stm32g0xx_it.o(.text.SVC_Handler) referenced from startup_stm32g030xx.o(RESET)
 <LI><a href="#[6]">SysTick_Handler</a> from stm32g0xx_it.o(.text.SysTick_Handler) referenced from startup_stm32g030xx.o(RESET)
 <LI><a href="#[1f]">SystemInit</a> from system_stm32g0xx.o(.text.SystemInit) referenced from startup_stm32g030xx.o(.text)
 <LI><a href="#[15]">TIM14_IRQHandler</a> from stm32g0xx_it.o(.text.TIM14_IRQHandler) referenced from startup_stm32g030xx.o(RESET)
 <LI><a href="#[16]">TIM16_IRQHandler</a> from stm32g0xx_it.o(.text.TIM16_IRQHandler) referenced from startup_stm32g030xx.o(RESET)
 <LI><a href="#[17]">TIM17_IRQHandler</a> from stm32g0xx_it.o(.text.TIM17_IRQHandler) referenced from startup_stm32g030xx.o(RESET)
 <LI><a href="#[12]">TIM1_BRK_UP_TRG_COM_IRQHandler</a> from startup_stm32g030xx.o(.text) referenced from startup_stm32g030xx.o(RESET)
 <LI><a href="#[13]">TIM1_CC_IRQHandler</a> from stm32g0xx_it.o(.text.TIM1_CC_IRQHandler) referenced from startup_stm32g030xx.o(RESET)
 <LI><a href="#[14]">TIM3_IRQHandler</a> from startup_stm32g030xx.o(.text) referenced from startup_stm32g030xx.o(RESET)
 <LI><a href="#[1c]">USART1_IRQHandler</a> from startup_stm32g030xx.o(.text) referenced from startup_stm32g030xx.o(RESET)
 <LI><a href="#[1d]">USART2_IRQHandler</a> from startup_stm32g030xx.o(.text) referenced from startup_stm32g030xx.o(RESET)
 <LI><a href="#[7]">WWDG_IRQHandler</a> from startup_stm32g030xx.o(.text) referenced from startup_stm32g030xx.o(RESET)
 <LI><a href="#[20]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32g030xx.o(.text)
 <LI><a href="#[1e]">main</a> from main.o(.text.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[21]">piddecayfun</a> from sys.o(.text.piddecayfun) referenced from sys.o(.text.UserPIDInit)
 <LI><a href="#[0]">saveSysStateToFlash</a> from sys.o(.text.saveSysStateToFlash) referenced 2 times from sys.o(.data.flashWriteWDOG)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[20]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g030xx.o(.text)
</UL>
<P><STRONG><a name="[e2]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[22]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[32]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[e3]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[e4]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[e5]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[e6]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[e7]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[1]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32g030xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g030xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>ADC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g030xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g030xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>DMA1_Ch4_5_DMAMUX1_OVR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g030xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g030xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g030xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g030xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>DMA1_Channel2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g030xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g030xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g030xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g030xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g030xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g030xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g030xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g030xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g030xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g030xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g030xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g030xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g030xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g030xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g030xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g030xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>RTC_TAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g030xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g030xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g030xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g030xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g030xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g030xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>TIM1_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g030xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g030xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g030xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g030xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g030xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g030xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g030xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g030xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32g030xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g030xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, uldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI_Scan
</UL>

<P><STRONG><a name="[3c]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write_Alignment64
</UL>

<P><STRONG><a name="[e0]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reloadSysStateFromFlash
</UL>

<P><STRONG><a name="[e8]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[28]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[e9]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[ea]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[27]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[bb]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reloadSysStateFromFlash
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_RTC_Init
</UL>

<P><STRONG><a name="[eb]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[29]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[2a]"></a>__aeabi_fadd</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IncPIDCalcDeltaAutoDecay
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Running_Scan
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
</UL>

<P><STRONG><a name="[2d]"></a>__aeabi_fsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IncPIDCalcDeltaAutoDecay
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Running_Scan
</UL>

<P><STRONG><a name="[2e]"></a>__aeabi_frsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[8e]"></a>__aeabi_fmul</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_CC_IRQHandler
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IncPIDCalcDeltaAutoDecay
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update_SyaState_2_Counter
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Running_Scan
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyDriver
</UL>

<P><STRONG><a name="[2f]"></a>__aeabi_fdiv</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update_SyaState_2_Counter
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Running_Scan
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyDriver
</UL>

<P><STRONG><a name="[8f]"></a>__aeabi_fcmplt</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, fcmplt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IncPIDCalcDeltaAutoDecay
</UL>

<P><STRONG><a name="[90]"></a>__aeabi_fcmpgt</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, fcmpgt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IncPIDCalcDeltaAutoDecay
</UL>

<P><STRONG><a name="[30]"></a>__aeabi_i2f</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, fflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_i2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update_SyaState_2_Counter
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Running_Scan
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyDriver
</UL>

<P><STRONG><a name="[31]"></a>__aeabi_ui2f</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ffltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_CC_IRQHandler
</UL>

<P><STRONG><a name="[95]"></a>__aeabi_f2iz</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, ffixi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_CC_IRQHandler
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update_SyaState_2_Counter
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Running_Scan
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyDriver
</UL>

<P><STRONG><a name="[49]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, uidiv_div0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_CC_IRQHandler
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Clock_Show
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_ControlVoltageScaling
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Minit_Nixie_Show
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[a8]"></a>__aeabi_uidivmod</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, uidiv_div0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Clock_Show
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_10Nixie_ShowNum
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Minit_Nixie_Show
</UL>

<P><STRONG><a name="[26]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[ec]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[25]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[ed]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[ee]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[2c]"></a>_float_round</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[2b]"></a>_float_epilogue</STRONG> (Thumb, 114 bytes, Stack size 12 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[23]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[ef]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[f0]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[f1]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[97]"></a>Counter_decrement</STRONG> (Thumb, 44 bytes, Stack size 4 bytes, counter.o(.text.Counter_decrement))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Counter_decrement
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyDriver
</UL>

<P><STRONG><a name="[c8]"></a>Counter_exceed_or_reach_max</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, counter.o(.text.Counter_exceed_or_reach_max))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Counter_exceed_or_reach_max
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Running_Scan
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Run_State_Update
</UL>

<P><STRONG><a name="[94]"></a>Counter_increment</STRONG> (Thumb, 44 bytes, Stack size 4 bytes, counter.o(.text.Counter_increment))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Counter_increment
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Running_Scan
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyDriver
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Update_State_2_UI
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Run_State_Update
</UL>

<P><STRONG><a name="[98]"></a>Counter_increment_circle</STRONG> (Thumb, 44 bytes, Stack size 4 bytes, counter.o(.text.Counter_increment_circle))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Counter_increment_circle
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;onKeyMinuteDown
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyDriver
</UL>

<P><STRONG><a name="[96]"></a>Counter_init</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, counter.o(.text.Counter_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Counter_init
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update_SyaState_2_Counter
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Running_Scan
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyDriver
</UL>

<P><STRONG><a name="[99]"></a>Counter_reset</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, counter.o(.text.Counter_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Counter_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;onKeyMinuteDown
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;onKeyHourDown
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Running_Scan
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyDriver
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Update_State_2_UI
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Run_State_Update
</UL>

<P><STRONG><a name="[d7]"></a>Counter_set_cnt</STRONG> (Thumb, 80 bytes, Stack size 12 bytes, counter.o(.text.Counter_set_cnt))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Counter_set_cnt
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update_SyaState_2_Counter
</UL>

<P><STRONG><a name="[ca]"></a>Counter_unreach_max</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, counter.o(.text.Counter_unreach_max))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Counter_unreach_max
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Running_Scan
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Update_State_2_UI
</UL>

<P><STRONG><a name="[b8]"></a>Error_Handler</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, main.o(.text.Error_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;onKeyMinuteDown
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;onKeyHourDown
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART2_UART_Init
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM3_Init
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM1_Init
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM17_Init
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM16_Init
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM14_Init
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_RTC_Init
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_CRC_Init
</UL>

<P><STRONG><a name="[36]"></a>FLASH_PageErase_L</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, flash.o(.text.FLASH_PageErase_L))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FLASH_PageErase_L
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Page_Erase
</UL>

<P><STRONG><a name="[33]"></a>FLASH_Page_Erase</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, flash.o(.text.FLASH_Page_Erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = FLASH_Page_Erase &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Unlock
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Lock
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_PageErase_L
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write_Alignment64
</UL>

<P><STRONG><a name="[35]"></a>FLASH_WaitForLastOperation</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, stm32g0xx_hal_flash.o(.text.FLASH_WaitForLastOperation))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Program
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Page_Erase
</UL>

<P><STRONG><a name="[39]"></a>Flash_Write_Alignment64</STRONG> (Thumb, 142 bytes, Stack size 48 bytes, flash.o(.text.Flash_Write_Alignment64))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = Flash_Write_Alignment64 &rArr; HAL_FLASH_Program &rArr; FLASH_Program_Fast
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Unlock
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Program
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Lock
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Page_Erase
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPage
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;saveSysStateToFlash
</UL>

<P><STRONG><a name="[42]"></a>HAL_CRCEx_Polynomial_Set</STRONG> (Thumb, 300 bytes, Stack size 28 bytes, stm32g0xx_hal_crc_ex.o(.text.HAL_CRCEx_Polynomial_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = HAL_CRCEx_Polynomial_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRC_Init
</UL>

<P><STRONG><a name="[3d]"></a>HAL_CRC_Calculate</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, stm32g0xx_hal_crc.o(.text.HAL_CRC_Calculate))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_CRC_Calculate &rArr; CRC_Handle_8
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC_Handle_8
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC_Handle_16
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;saveSysStateToFlash
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkSysStateCrcValid
</UL>

<P><STRONG><a name="[40]"></a>HAL_CRC_Init</STRONG> (Thumb, 208 bytes, Stack size 16 bytes, stm32g0xx_hal_crc.o(.text.HAL_CRC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = HAL_CRC_Init &rArr; HAL_CRCEx_Polynomial_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRCEx_Polynomial_Set
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRC_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_CRC_Init
</UL>

<P><STRONG><a name="[41]"></a>HAL_CRC_MspInit</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, crc.o(.text.HAL_CRC_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_CRC_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRC_Init
</UL>

<P><STRONG><a name="[43]"></a>HAL_Delay</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, stm32g0xx_hal.o(.text.HAL_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[37]"></a>HAL_FLASH_Lock</STRONG> (Thumb, 44 bytes, Stack size 4 bytes, stm32g0xx_hal_flash.o(.text.HAL_FLASH_Lock))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_FLASH_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Page_Erase
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write_Alignment64
</UL>

<P><STRONG><a name="[3b]"></a>HAL_FLASH_Program</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, stm32g0xx_hal_flash.o(.text.HAL_FLASH_Program))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = HAL_FLASH_Program &rArr; FLASH_Program_Fast
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Program_Fast
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Program_DoubleWord
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write_Alignment64
</UL>

<P><STRONG><a name="[34]"></a>HAL_FLASH_Unlock</STRONG> (Thumb, 60 bytes, Stack size 4 bytes, stm32g0xx_hal_flash.o(.text.HAL_FLASH_Unlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_FLASH_Unlock
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Page_Erase
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write_Alignment64
</UL>

<P><STRONG><a name="[66]"></a>HAL_GPIO_Init</STRONG> (Thumb, 688 bytes, Stack size 40 bytes, stm32g0xx_hal_gpio.o(.text.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_MspPostInit
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI_Init
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Relay_Init
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Optocoupler_Init
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyGPIOConfig
</UL>

<P><STRONG><a name="[c7]"></a>HAL_GPIO_ReadPin</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, stm32g0xx_hal_gpio.o(.text.HAL_GPIO_ReadPin))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_GPIO_ReadPin
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Update_State_2_UI
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Run_State_Update
</UL>

<P><STRONG><a name="[8a]"></a>HAL_GPIO_WritePin</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, stm32g0xx_hal_gpio.o(.text.HAL_GPIO_WritePin))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM16_IRQHandler
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Running_Scan
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WritetoHT1621
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDatatoHT1621
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCmdtoHT1621
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1621Init
</UL>

<P><STRONG><a name="[38]"></a>HAL_GetTick</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32g0xx_hal.o(.text.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetAlarm
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_WaitForSynchro
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_CheckIdleState
</UL>

<P><STRONG><a name="[c5]"></a>HAL_IncTick</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32g0xx_hal.o(.text.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[46]"></a>HAL_Init</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, stm32g0xx_hal.o(.text.HAL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = HAL_Init &rArr; HAL_InitTick &rArr; HAL_SYSTICK_Config &rArr; SysTick_Config &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[47]"></a>HAL_InitTick</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, stm32g0xx_hal.o(.text.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_InitTick &rArr; HAL_SYSTICK_Config &rArr; SysTick_Config &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[48]"></a>HAL_MspInit</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, stm32g0xx_hal_msp.o(.text.HAL_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[4c]"></a>HAL_NVIC_EnableIRQ</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, stm32g0xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_NVIC_EnableIRQ &rArr; __NVIC_EnableIRQ
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
</UL>

<P><STRONG><a name="[4b]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, stm32g0xx_hal_cortex.o(.text.HAL_NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
</UL>

<P><STRONG><a name="[4f]"></a>HAL_PWREx_ControlVoltageScaling</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, stm32g0xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlVoltageScaling))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_PWREx_ControlVoltageScaling &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[50]"></a>HAL_RCCEx_PeriphCLKConfig</STRONG> (Thumb, 536 bytes, Stack size 40 bytes, stm32g0xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_RCCEx_PeriphCLKConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[51]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 572 bytes, Stack size 24 bytes, stm32g0xx_hal_rcc.o(.text.HAL_RCC_ClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_SYSTICK_Config &rArr; SysTick_Config &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[54]"></a>HAL_RCC_GetHCLKFreq</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32g0xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
</UL>

<P><STRONG><a name="[53]"></a>HAL_RCC_GetPCLK1Freq</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, stm32g0xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_RCC_GetPCLK1Freq
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetAPB1Prescaler
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[52]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 268 bytes, Stack size 40 bytes, stm32g0xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_RCC_GetSysClockFreq &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[56]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 1660 bytes, Stack size 40 bytes, stm32g0xx_hal_rcc.o(.text.HAL_RCC_OscConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = HAL_RCC_OscConfig &rArr; HAL_InitTick &rArr; HAL_SYSTICK_Config &rArr; SysTick_Config &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[57]"></a>HAL_RTC_GetDate</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, stm32g0xx_hal_rtc.o(.text.HAL_RTC_GetDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_RTC_GetDate &rArr; RTC_Bcd2ToByte
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI_Scan
</UL>

<P><STRONG><a name="[59]"></a>HAL_RTC_GetTime</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, stm32g0xx_hal_rtc.o(.text.HAL_RTC_GetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_RTC_GetTime &rArr; RTC_Bcd2ToByte
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI_Scan
</UL>

<P><STRONG><a name="[5a]"></a>HAL_RTC_Init</STRONG> (Thumb, 260 bytes, Stack size 16 bytes, stm32g0xx_hal_rtc.o(.text.HAL_RTC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_RTC_Init &rArr; RTC_ExitInitMode &rArr; HAL_RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_MspInit
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitInitMode
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_RTC_Init
</UL>

<P><STRONG><a name="[5b]"></a>HAL_RTC_MspInit</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, rtc.o(.text.HAL_RTC_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_RTC_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_Init
</UL>

<P><STRONG><a name="[5e]"></a>HAL_RTC_SetAlarm</STRONG> (Thumb, 636 bytes, Stack size 48 bytes, stm32g0xx_hal_rtc.o(.text.HAL_RTC_SetAlarm))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = HAL_RTC_SetAlarm &rArr; RTC_ByteToBcd2
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ByteToBcd2
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_RTC_Init
</UL>

<P><STRONG><a name="[60]"></a>HAL_RTC_SetTime</STRONG> (Thumb, 348 bytes, Stack size 40 bytes, stm32g0xx_hal_rtc.o(.text.HAL_RTC_SetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HAL_RTC_SetTime &rArr; RTC_ExitInitMode &rArr; HAL_RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitInitMode
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ByteToBcd2
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;onKeyMinuteDown
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;onKeyHourDown
</UL>

<P><STRONG><a name="[61]"></a>HAL_RTC_WaitForSynchro</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, stm32g0xx_hal_rtc.o(.text.HAL_RTC_WaitForSynchro))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitInitMode
</UL>

<P><STRONG><a name="[4a]"></a>HAL_SYSTICK_Config</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, stm32g0xx_hal_cortex.o(.text.HAL_SYSTICK_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_SYSTICK_Config &rArr; SysTick_Config &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[c0]"></a>HAL_TIMEx_MasterConfigSynchronization</STRONG> (Thumb, 212 bytes, Stack size 20 bytes, stm32g0xx_hal_tim_ex.o(.text.HAL_TIMEx_MasterConfigSynchronization))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_TIMEx_MasterConfigSynchronization
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM3_Init
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM1_Init
</UL>

<P><STRONG><a name="[63]"></a>HAL_TIM_Base_Init</STRONG> (Thumb, 170 bytes, Stack size 16 bytes, stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM3_Init
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM1_Init
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM17_Init
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM16_Init
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM14_Init
</UL>

<P><STRONG><a name="[64]"></a>HAL_TIM_Base_MspInit</STRONG> (Thumb, 372 bytes, Stack size 96 bytes, tim.o(.text.HAL_TIM_Base_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>

<P><STRONG><a name="[de]"></a>HAL_TIM_Base_Start_IT</STRONG> (Thumb, 148 bytes, Stack size 12 bytes, stm32g0xx_hal_tim.o(.text.HAL_TIM_Base_Start_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_TIM_Base_Start_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[67]"></a>HAL_TIM_ConfigClockSource</STRONG> (Thumb, 384 bytes, Stack size 32 bytes, stm32g0xx_hal_tim.o(.text.HAL_TIM_ConfigClockSource))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = HAL_TIM_ConfigClockSource &rArr; TIM_ETR_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETR_SetConfig
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TI2_ConfigInputStage
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TI1_ConfigInputStage
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITRx_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM3_Init
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM1_Init
</UL>

<P><STRONG><a name="[6c]"></a>HAL_TIM_IC_ConfigChannel</STRONG> (Thumb, 284 bytes, Stack size 24 bytes, stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_ConfigChannel))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = HAL_TIM_IC_ConfigChannel &rArr; TIM_TI1_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TI1_SetConfig
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TI4_SetConfig
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TI3_SetConfig
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TI2_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM1_Init
</UL>

<P><STRONG><a name="[71]"></a>HAL_TIM_IC_Init</STRONG> (Thumb, 170 bytes, Stack size 16 bytes, stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = HAL_TIM_IC_Init &rArr; TIM_Base_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_SetConfig
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM1_Init
</UL>

<P><STRONG><a name="[72]"></a>HAL_TIM_IC_MspInit</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_TIM_IC_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_Init
</UL>

<P><STRONG><a name="[73]"></a>HAL_TIM_IC_Start_IT</STRONG> (Thumb, 704 bytes, Stack size 96 bytes, stm32g0xx_hal_tim.o(.text.HAL_TIM_IC_Start_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = HAL_TIM_IC_Start_IT &rArr; TIM_CCxChannelCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxChannelCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[75]"></a>HAL_TIM_MspPostInit</STRONG> (Thumb, 84 bytes, Stack size 40 bytes, tim.o(.text.HAL_TIM_MspPostInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HAL_TIM_MspPostInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM3_Init
</UL>

<P><STRONG><a name="[76]"></a>HAL_TIM_OnePulse_Init</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, stm32g0xx_hal_tim.o(.text.HAL_TIM_OnePulse_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = HAL_TIM_OnePulse_Init &rArr; TIM_Base_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_SetConfig
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OnePulse_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM3_Init
</UL>

<P><STRONG><a name="[77]"></a>HAL_TIM_OnePulse_MspInit</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32g0xx_hal_tim.o(.text.HAL_TIM_OnePulse_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_TIM_OnePulse_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OnePulse_Init
</UL>

<P><STRONG><a name="[78]"></a>HAL_TIM_OnePulse_Start</STRONG> (Thumb, 236 bytes, Stack size 48 bytes, stm32g0xx_hal_tim.o(.text.HAL_TIM_OnePulse_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_TIM_OnePulse_Start &rArr; TIM_CCxChannelCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxChannelCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM14_IRQHandler
</UL>

<P><STRONG><a name="[79]"></a>HAL_TIM_PWM_ConfigChannel</STRONG> (Thumb, 490 bytes, Stack size 32 bytes, stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_ConfigChannel))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = HAL_TIM_PWM_ConfigChannel &rArr; TIM_OC2_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC2_SetConfig
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC6_SetConfig
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC5_SetConfig
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC4_SetConfig
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC3_SetConfig
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM3_Init
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM14_Init
</UL>

<P><STRONG><a name="[80]"></a>HAL_TIM_PWM_Init</STRONG> (Thumb, 170 bytes, Stack size 16 bytes, stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = HAL_TIM_PWM_Init &rArr; TIM_Base_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_SetConfig
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM3_Init
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM14_Init
</UL>

<P><STRONG><a name="[81]"></a>HAL_TIM_PWM_MspInit</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_TIM_PWM_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_Init
</UL>

<P><STRONG><a name="[82]"></a>HAL_TIM_PWM_Start_IT</STRONG> (Thumb, 600 bytes, Stack size 72 bytes, stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_Start_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_TIM_PWM_Start_IT &rArr; TIM_CCxChannelCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxChannelCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Running_Scan
</UL>

<P><STRONG><a name="[83]"></a>HAL_TIM_PWM_Stop_IT</STRONG> (Thumb, 448 bytes, Stack size 40 bytes, stm32g0xx_hal_tim.o(.text.HAL_TIM_PWM_Stop_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_TIM_PWM_Stop_IT &rArr; TIM_CCxChannelCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxChannelCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Running_Scan
</UL>

<P><STRONG><a name="[84]"></a>HAL_UART_Init</STRONG> (Thumb, 180 bytes, Stack size 16 bytes, stm32g0xx_hal_uart.o(.text.HAL_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = HAL_UART_Init &rArr; UART_SetConfig &rArr; HAL_RCC_GetSysClockFreq &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_CheckIdleState
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_AdvFeatureConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART2_UART_Init
</UL>

<P><STRONG><a name="[85]"></a>HAL_UART_MspInit</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, usart.o(.text.HAL_UART_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HAL_UART_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[89]"></a>HT1621Init</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, ht1621.o(.text.HT1621Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = HT1621Init &rArr; WritetoHT1621 &rArr; WriteDatatoHT1621 &rArr; HAL_GPIO_WritePin
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WritetoHT1621
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCmdtoHT1621
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI_Init
</UL>

<P><STRONG><a name="[3]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32g0xx_it.o(.text.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g030xx.o(RESET)
</UL>
<P><STRONG><a name="[8d]"></a>IncPIDCalcDeltaAutoDecay</STRONG> (Thumb, 242 bytes, Stack size 48 bytes, pid.o(.text.IncPIDCalcDeltaAutoDecay))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = IncPIDCalcDeltaAutoDecay &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmplt
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmpgt
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_CC_IRQHandler
</UL>

<P><STRONG><a name="[d9]"></a>IncPIDInit</STRONG> (Thumb, 74 bytes, Stack size 4 bytes, pid.o(.text.IncPIDInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = IncPIDInit
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserPIDInit
</UL>

<P><STRONG><a name="[91]"></a>KeyDriver</STRONG> (Thumb, 1548 bytes, Stack size 112 bytes, main.o(.text.KeyDriver))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = KeyDriver &rArr; onKeyMinuteDown &rArr; UI_SendMessage &rArr; Lcd_Output_Nixie_Show &rArr; Lcd_10Nixie_ShowNum &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;onKeyMinuteDown
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;onKeyHourDown
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isKeyFIFOEmpty
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI_SendMessage
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Time_ResetHMS
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Time_Minute_Increament
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_FIFO_Get
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Counter_reset
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Counter_init
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Counter_increment_circle
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Counter_increment
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Counter_decrement
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oneMilliSecCallback
</UL>

<P><STRONG><a name="[9f]"></a>KeyGPIOConfig</STRONG> (Thumb, 220 bytes, Stack size 48 bytes, key.o(.text.KeyGPIOConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = KeyGPIOConfig &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enableKey_GPIO_CLK
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyInit
</UL>

<P><STRONG><a name="[a1]"></a>KeyInit</STRONG> (Thumb, 240 bytes, Stack size 48 bytes, key.o(.text.KeyInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = KeyInit &rArr; KeyGPIOConfig &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyGPIOConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_KeyInit
</UL>

<P><STRONG><a name="[a3]"></a>KeyPinRead</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, key.o(.text.KeyPinRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = KeyPinRead
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyScan
</UL>

<P><STRONG><a name="[a5]"></a>KeyPinSet</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, key.o(.text.KeyPinSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = KeyPinSet
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyScan
</UL>

<P><STRONG><a name="[a2]"></a>KeyScan</STRONG> (Thumb, 812 bytes, Stack size 40 bytes, key.o(.text.KeyScan))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = KeyScan &rArr; KeyPinSet
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_FIFO_Put
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyPinSet
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyPinRead
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oneMilliSecCallback
</UL>

<P><STRONG><a name="[93]"></a>Key_FIFO_Get</STRONG> (Thumb, 64 bytes, Stack size 4 bytes, key.o(.text.Key_FIFO_Get))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Key_FIFO_Get
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyDriver
</UL>

<P><STRONG><a name="[a4]"></a>Key_FIFO_Put</STRONG> (Thumb, 40 bytes, Stack size 4 bytes, key.o(.text.Key_FIFO_Put))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Key_FIFO_Put
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyScan
</UL>

<P><STRONG><a name="[a6]"></a>LED_Init</STRONG> (Thumb, 68 bytes, Stack size 48 bytes, led.o(.text.LED_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = LED_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b0]"></a>Lcd_10Nixe_Off</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, ht1621.o(.text.Lcd_10Nixe_Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Lcd_10Nixe_Off
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Minit_Nixe_Off
</UL>

<P><STRONG><a name="[a7]"></a>Lcd_10Nixie_ShowNum</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, ht1621.o(.text.Lcd_10Nixie_ShowNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Lcd_10Nixie_ShowNum &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Output_Nixie_Show
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Interval_Nixie_Show
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Fodder_Nixie_Show
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Area_Nixie_Show
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Minit_Nixie_Show
</UL>

<P><STRONG><a name="[b4]"></a>Lcd_8Nixie_Off</STRONG> (Thumb, 32 bytes, Stack size 4 bytes, ht1621.o(.text.Lcd_8Nixie_Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Lcd_8Nixie_Off
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Period_Off
</UL>

<P><STRONG><a name="[ab]"></a>Lcd_8Nixie_ShowNum</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, ht1621.o(.text.Lcd_8Nixie_ShowNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Lcd_8Nixie_ShowNum
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Clock_Show
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Clock_Show_None
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Period_Show
</UL>

<P><STRONG><a name="[a9]"></a>Lcd_Area_Nixie_Show</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, ht1621.o(.text.Lcd_Area_Nixie_Show))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Lcd_Area_Nixie_Show &rArr; Lcd_10Nixie_ShowNum &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_10Nixie_ShowNum
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI_SendMessage
</UL>

<P><STRONG><a name="[aa]"></a>Lcd_Clock_Show</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, ht1621.o(.text.Lcd_Clock_Show))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Lcd_Clock_Show &rArr; Lcd_8Nixie_ShowNum
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_8Nixie_ShowNum
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;onKeyMinuteDown
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;onKeyHourDown
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI_Scan
</UL>

<P><STRONG><a name="[ac]"></a>Lcd_Clock_Show_None</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, ht1621.o(.text.Lcd_Clock_Show_None))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Lcd_Clock_Show_None &rArr; Lcd_8Nixie_ShowNum
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_8Nixie_ShowNum
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI_Scan
</UL>

<P><STRONG><a name="[ad]"></a>Lcd_Fodder_Nixie_Show</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, ht1621.o(.text.Lcd_Fodder_Nixie_Show))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Lcd_Fodder_Nixie_Show &rArr; Lcd_10Nixie_ShowNum &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_10Nixie_ShowNum
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI_SendMessage
</UL>

<P><STRONG><a name="[ae]"></a>Lcd_Interval_Nixie_Show</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, ht1621.o(.text.Lcd_Interval_Nixie_Show))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Lcd_Interval_Nixie_Show &rArr; Lcd_10Nixie_ShowNum &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_10Nixie_ShowNum
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI_SendMessage
</UL>

<P><STRONG><a name="[af]"></a>Lcd_Minit_Nixe_Off</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, ht1621.o(.text.Lcd_Minit_Nixe_Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Lcd_Minit_Nixe_Off &rArr; Lcd_10Nixe_Off
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_10Nixe_Off
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Update_State_2_UI
</UL>

<P><STRONG><a name="[b1]"></a>Lcd_Minit_Nixie_Show</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, ht1621.o(.text.Lcd_Minit_Nixie_Show))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Lcd_Minit_Nixie_Show &rArr; Lcd_10Nixie_ShowNum &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_10Nixie_ShowNum
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Update_State_2_UI
</UL>

<P><STRONG><a name="[b2]"></a>Lcd_Output_Nixie_Show</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, ht1621.o(.text.Lcd_Output_Nixie_Show))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Lcd_Output_Nixie_Show &rArr; Lcd_10Nixie_ShowNum &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_10Nixie_ShowNum
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI_SendMessage
</UL>

<P><STRONG><a name="[b3]"></a>Lcd_Period_Off</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ht1621.o(.text.Lcd_Period_Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Lcd_Period_Off &rArr; Lcd_8Nixie_Off
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_8Nixie_Off
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI_SendMessage
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Update_State_2_UI
</UL>

<P><STRONG><a name="[b5]"></a>Lcd_Period_Show</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, ht1621.o(.text.Lcd_Period_Show))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Lcd_Period_Show &rArr; Lcd_8Nixie_ShowNum
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_8Nixie_ShowNum
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI_SendMessage
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Update_State_2_UI
</UL>

<P><STRONG><a name="[b6]"></a>Lcd_Show_Updata</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, ht1621.o(.text.Lcd_Show_Updata))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = Lcd_Show_Updata &rArr; WritetoHT1621 &rArr; WriteDatatoHT1621 &rArr; HAL_GPIO_WritePin
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WritetoHT1621
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI_Scan
</UL>

<P><STRONG><a name="[b7]"></a>MX_CRC_Init</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, crc.o(.text.MX_CRC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = MX_CRC_Init &rArr; HAL_CRC_Init &rArr; HAL_CRCEx_Polynomial_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRC_Init
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b9]"></a>MX_GPIO_Init</STRONG> (Thumb, 256 bytes, Stack size 72 bytes, gpio.o(.text.MX_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = MX_GPIO_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ba]"></a>MX_RTC_Init</STRONG> (Thumb, 160 bytes, Stack size 88 bytes, rtc.o(.text.MX_RTC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = MX_RTC_Init &rArr; HAL_RTC_SetAlarm &rArr; RTC_ByteToBcd2
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetAlarm
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_Init
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[bc]"></a>MX_TIM14_Init</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, tim.o(.text.MX_TIM14_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = MX_TIM14_Init &rArr; HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_Init
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_ConfigChannel
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[bd]"></a>MX_TIM16_Init</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, tim.o(.text.MX_TIM16_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = MX_TIM16_Init &rArr; HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[be]"></a>MX_TIM17_Init</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, tim.o(.text.MX_TIM17_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = MX_TIM17_Init &rArr; HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[bf]"></a>MX_TIM1_Init</STRONG> (Thumb, 204 bytes, Stack size 64 bytes, tim.o(.text.MX_TIM1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = MX_TIM1_Init &rArr; HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_Init
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_ConfigChannel
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_MasterConfigSynchronization
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c1]"></a>MX_TIM3_Init</STRONG> (Thumb, 212 bytes, Stack size 72 bytes, tim.o(.text.MX_TIM3_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = MX_TIM3_Init &rArr; HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_Init
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_ConfigChannel
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OnePulse_Init
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_MspPostInit
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_MasterConfigSynchronization
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c2]"></a>MX_USART2_UART_Init</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, usart.o(.text.MX_USART2_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = MX_USART2_UART_Init &rArr; HAL_UART_Init &rArr; UART_SetConfig &rArr; HAL_RCC_GetSysClockFreq &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2]"></a>NMI_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32g0xx_it.o(.text.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g030xx.o(RESET)
</UL>
<P><STRONG><a name="[c3]"></a>Optocoupler_Init</STRONG> (Thumb, 56 bytes, Stack size 32 bytes, optocoupler.o(.text.Optocoupler_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Optocoupler_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32g0xx_it.o(.text.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g030xx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>RTC_Bcd2ToByte</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32g0xx_hal_rtc.o(.text.RTC_Bcd2ToByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_Bcd2ToByte
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetTime
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetDate
</UL>

<P><STRONG><a name="[5f]"></a>RTC_ByteToBcd2</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, stm32g0xx_hal_rtc.o(.text.RTC_ByteToBcd2))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RTC_ByteToBcd2
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetAlarm
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetTime
</UL>

<P><STRONG><a name="[5c]"></a>RTC_EnterInitMode</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, stm32g0xx_hal_rtc.o(.text.RTC_EnterInitMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_Init
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetTime
</UL>

<P><STRONG><a name="[5d]"></a>RTC_ExitInitMode</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, stm32g0xx_hal_rtc.o(.text.RTC_ExitInitMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = RTC_ExitInitMode &rArr; HAL_RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_WaitForSynchro
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_Init
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetTime
</UL>

<P><STRONG><a name="[cc]"></a>RTC_Time_Equal</STRONG> (Thumb, 70 bytes, Stack size 12 bytes, rtclib.o(.text.RTC_Time_Equal))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RTC_Time_Equal
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Running_Schedule_Scan
</UL>

<P><STRONG><a name="[df]"></a>RTC_Time_Hour_Increament</STRONG> (Thumb, 36 bytes, Stack size 4 bytes, rtclib.o(.text.RTC_Time_Hour_Increament))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = RTC_Time_Hour_Increament
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;onKeyHourDown
</UL>

<P><STRONG><a name="[9d]"></a>RTC_Time_Minute_Increament</STRONG> (Thumb, 36 bytes, Stack size 4 bytes, rtclib.o(.text.RTC_Time_Minute_Increament))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = RTC_Time_Minute_Increament
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;onKeyMinuteDown
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyDriver
</UL>

<P><STRONG><a name="[9e]"></a>RTC_Time_ResetHMS</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, rtclib.o(.text.RTC_Time_ResetHMS))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = RTC_Time_ResetHMS
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyDriver
</UL>

<P><STRONG><a name="[c4]"></a>Relay_Init</STRONG> (Thumb, 52 bytes, Stack size 32 bytes, relay.o(.text.Relay_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Relay_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32g0xx_it.o(.text.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g030xx.o(RESET)
</UL>
<P><STRONG><a name="[cf]"></a>SoftWDOG_Decrease</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, softwdog.o(.text.SoftWDOG_Decrease))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SoftWDOG_Decrease
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM16_IRQHandler
</UL>

<P><STRONG><a name="[e1]"></a>SoftWDOG_Disable</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, softwdog.o(.text.SoftWDOG_Disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SoftWDOG_Disable
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;saveSysStateToFlash
</UL>

<P><STRONG><a name="[d1]"></a>SoftWDOG_Feed</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, softwdog.o(.text.SoftWDOG_Feed))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SoftWDOG_Feed
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_CC_IRQHandler
</UL>

<P><STRONG><a name="[6]"></a>SysTick_Handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32g0xx_it.o(.text.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g030xx.o(RESET)
</UL>
<P><STRONG><a name="[c6]"></a>Sys_Run_State_Update</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, sys.o(.text.Sys_Run_State_Update))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Sys_Run_State_Update &rArr; HAL_GPIO_ReadPin
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Counter_reset
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Counter_increment
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Counter_exceed_or_reach_max
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI_Scan
</UL>

<P><STRONG><a name="[c9]"></a>Sys_Running_Scan</STRONG> (Thumb, 476 bytes, Stack size 64 bytes, sys.o(.text.Sys_Running_Scan))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Sys_Running_Scan &rArr; HAL_TIM_PWM_Start_IT &rArr; TIM_CCxChannelCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_Stop_IT
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Counter_reset
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Counter_init
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Counter_increment
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_Start_IT
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Counter_unreach_max
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Counter_exceed_or_reach_max
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oneMilliSecCallback
</UL>

<P><STRONG><a name="[cb]"></a>Sys_Running_Schedule_Scan</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, sys.o(.text.Sys_Running_Schedule_Scan))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Sys_Running_Schedule_Scan &rArr; RTC_Time_Equal
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Time_Equal
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI_Scan
</UL>

<P><STRONG><a name="[cd]"></a>Sys_Update_State_2_UI</STRONG> (Thumb, 688 bytes, Stack size 48 bytes, sys.o(.text.Sys_Update_State_2_UI))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = Sys_Update_State_2_UI &rArr; UI_SendMessage &rArr; Lcd_Output_Nixie_Show &rArr; Lcd_10Nixie_ShowNum &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI_SendMessage
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Counter_reset
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Counter_increment
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Period_Show
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Period_Off
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Minit_Nixie_Show
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Minit_Nixe_Off
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Counter_unreach_max
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI_Scan
</UL>

<P><STRONG><a name="[ce]"></a>SystemClock_Config</STRONG> (Thumb, 170 bytes, Stack size 112 bytes, main.o(.text.SystemClock_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = SystemClock_Config &rArr; HAL_RCC_OscConfig &rArr; HAL_InitTick &rArr; HAL_SYSTICK_Config &rArr; SysTick_Config &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_ControlVoltageScaling
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1f]"></a>SystemInit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, system_stm32g0xx.o(.text.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g030xx.o(.text)
</UL>
<P><STRONG><a name="[15]"></a>TIM14_IRQHandler</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, stm32g0xx_it.o(.text.TIM14_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = TIM14_IRQHandler &rArr; HAL_TIM_OnePulse_Start &rArr; TIM_CCxChannelCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OnePulse_Start
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g030xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TIM16_IRQHandler</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, stm32g0xx_it.o(.text.TIM16_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TIM16_IRQHandler &rArr; SoftWDOG_Decrease
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftWDOG_Decrease
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g030xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>TIM17_IRQHandler</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, stm32g0xx_it.o(.text.TIM17_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = TIM17_IRQHandler &rArr; oneMilliSecCallback &rArr; KeyDriver &rArr; onKeyMinuteDown &rArr; UI_SendMessage &rArr; Lcd_Output_Nixie_Show &rArr; Lcd_10Nixie_ShowNum &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oneMilliSecCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g030xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, stm32g0xx_it.o(.text.TIM1_CC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = TIM1_CC_IRQHandler &rArr; IncPIDCalcDeltaAutoDecay &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftWDOG_Feed
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IncPIDCalcDeltaAutoDecay
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32g030xx.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>TIM_Base_SetConfig</STRONG> (Thumb, 212 bytes, Stack size 12 bytes, stm32g0xx_hal_tim.o(.text.TIM_Base_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_Init
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OnePulse_Init
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_Init
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>

<P><STRONG><a name="[74]"></a>TIM_CCxChannelCmd</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, stm32g0xx_hal_tim.o(.text.TIM_CCxChannelCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_CCxChannelCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OnePulse_Start
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_Stop_IT
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_Start_IT
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_Start_IT
</UL>

<P><STRONG><a name="[68]"></a>TIM_ETR_SetConfig</STRONG> (Thumb, 54 bytes, Stack size 20 bytes, stm32g0xx_hal_tim.o(.text.TIM_ETR_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_ETR_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
</UL>

<P><STRONG><a name="[7b]"></a>TIM_OC2_SetConfig</STRONG> (Thumb, 264 bytes, Stack size 20 bytes, stm32g0xx_hal_tim.o(.text.TIM_OC2_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_OC2_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_ConfigChannel
</UL>

<P><STRONG><a name="[6d]"></a>TIM_TI1_SetConfig</STRONG> (Thumb, 152 bytes, Stack size 28 bytes, stm32g0xx_hal_tim.o(.text.TIM_TI1_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = TIM_TI1_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_ConfigChannel
</UL>

<P><STRONG><a name="[87]"></a>UART_AdvFeatureConfig</STRONG> (Thumb, 346 bytes, Stack size 4 bytes, stm32g0xx_hal_uart.o(.text.UART_AdvFeatureConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = UART_AdvFeatureConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[88]"></a>UART_CheckIdleState</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, stm32g0xx_hal_uart.o(.text.UART_CheckIdleState))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = UART_CheckIdleState &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[86]"></a>UART_SetConfig</STRONG> (Thumb, 700 bytes, Stack size 64 bytes, stm32g0xx_hal_uart.o(.text.UART_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = UART_SetConfig &rArr; HAL_RCC_GetSysClockFreq &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[d2]"></a>UART_WaitOnFlagUntilTimeout</STRONG> (Thumb, 268 bytes, Stack size 32 bytes, stm32g0xx_hal_uart.o(.text.UART_WaitOnFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_CheckIdleState
</UL>

<P><STRONG><a name="[d4]"></a>UI_Constant_Text_Show</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, ui.o(.text.UI_Constant_Text_Show))
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI_Init
</UL>

<P><STRONG><a name="[d3]"></a>UI_Init</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, ui.o(.text.UI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = UI_Init &rArr; HT1621Init &rArr; WritetoHT1621 &rArr; WriteDatatoHT1621 &rArr; HAL_GPIO_WritePin
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI_Constant_Text_Show
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1621Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d5]"></a>UI_Scan</STRONG> (Thumb, 688 bytes, Stack size 40 bytes, ui.o(.text.UI_Scan))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = UI_Scan &rArr; Sys_Update_State_2_UI &rArr; UI_SendMessage &rArr; Lcd_Output_Nixie_Show &rArr; Lcd_10Nixie_ShowNum &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Clock_Show
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetTime
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetDate
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Show_Updata
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Clock_Show_None
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Update_State_2_UI
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Running_Schedule_Scan
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Run_State_Update
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oneMilliSecCallback
</UL>

<P><STRONG><a name="[9c]"></a>UI_SendMessage</STRONG> (Thumb, 588 bytes, Stack size 24 bytes, ui.o(.text.UI_SendMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = UI_SendMessage &rArr; Lcd_Output_Nixie_Show &rArr; Lcd_10Nixie_ShowNum &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Output_Nixie_Show
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Interval_Nixie_Show
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Fodder_Nixie_Show
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Area_Nixie_Show
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Period_Show
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Period_Off
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;onKeyMinuteDown
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;onKeyHourDown
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyDriver
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Update_State_2_UI
</UL>

<P><STRONG><a name="[d6]"></a>Update_SyaState_2_Counter</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, main.o(.text.Update_SyaState_2_Counter))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Update_SyaState_2_Counter &rArr; __aeabi_i2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Counter_set_cnt
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Counter_init
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d8]"></a>UserPIDInit</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, sys.o(.text.UserPIDInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = UserPIDInit &rArr; IncPIDInit
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IncPIDInit
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[da]"></a>User_KeyInit</STRONG> (Thumb, 44 bytes, Stack size 88 bytes, main.o(.text.User_KeyInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = User_KeyInit &rArr; KeyInit &rArr; KeyGPIOConfig &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyInit
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8b]"></a>WriteCmdtoHT1621</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, ht1621.o(.text.WriteCmdtoHT1621))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = WriteCmdtoHT1621 &rArr; WriteDatatoHT1621 &rArr; HAL_GPIO_WritePin
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDatatoHT1621
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1621Init
</UL>

<P><STRONG><a name="[db]"></a>WriteDatatoHT1621</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, ht1621.o(.text.WriteDatatoHT1621))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = WriteDatatoHT1621 &rArr; HAL_GPIO_WritePin
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WritetoHT1621
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCmdtoHT1621
</UL>

<P><STRONG><a name="[8c]"></a>WritetoHT1621</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, ht1621.o(.text.WritetoHT1621))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = WritetoHT1621 &rArr; WriteDatatoHT1621 &rArr; HAL_GPIO_WritePin
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDatatoHT1621
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Show_Updata
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HT1621Init
</UL>

<P><STRONG><a name="[dc]"></a>checkSysStateCrcValid</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, sys.o(.text.checkSysStateCrcValid))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = checkSysStateCrcValid &rArr; HAL_CRC_Calculate &rArr; CRC_Handle_8
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRC_Calculate
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reloadSysStateFromFlash
</UL>

<P><STRONG><a name="[a0]"></a>enableKey_GPIO_CLK</STRONG> (Thumb, 200 bytes, Stack size 24 bytes, key.o(.text.enableKey_GPIO_CLK))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = enableKey_GPIO_CLK
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyGPIOConfig
</UL>

<P><STRONG><a name="[92]"></a>isKeyFIFOEmpty</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, key.o(.text.isKeyFIFOEmpty))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyDriver
</UL>

<P><STRONG><a name="[1e]"></a>main</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, main.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = main &rArr; reloadSysStateFromFlash &rArr; saveSysStateToFlash &rArr; Flash_Write_Alignment64 &rArr; HAL_FLASH_Program &rArr; FLASH_Program_Fast
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reloadSysStateFromFlash
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_KeyInit
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserPIDInit
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update_SyaState_2_Counter
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI_Init
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Relay_Init
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Optocoupler_Init
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART2_UART_Init
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM3_Init
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM1_Init
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM17_Init
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM16_Init
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM14_Init
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_RTC_Init
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_CRC_Init
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_Stop_IT
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_Start_IT
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Start_IT
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[9b]"></a>onKeyHourDown</STRONG> (Thumb, 296 bytes, Stack size 32 bytes, main.o(.text.onKeyHourDown))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = onKeyHourDown &rArr; UI_SendMessage &rArr; Lcd_Output_Nixie_Show &rArr; Lcd_10Nixie_ShowNum &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI_SendMessage
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Time_Hour_Increament
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Clock_Show
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetTime
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Counter_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyDriver
</UL>

<P><STRONG><a name="[9a]"></a>onKeyMinuteDown</STRONG> (Thumb, 332 bytes, Stack size 40 bytes, main.o(.text.onKeyMinuteDown))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = onKeyMinuteDown &rArr; UI_SendMessage &rArr; Lcd_Output_Nixie_Show &rArr; Lcd_10Nixie_ShowNum &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI_SendMessage
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Time_Minute_Increament
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Clock_Show
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetTime
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Counter_reset
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Counter_increment_circle
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyDriver
</UL>

<P><STRONG><a name="[d0]"></a>oneMilliSecCallback</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, main.o(.text.oneMilliSecCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = oneMilliSecCallback &rArr; KeyDriver &rArr; onKeyMinuteDown &rArr; UI_SendMessage &rArr; Lcd_Output_Nixie_Show &rArr; Lcd_10Nixie_ShowNum &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UI_Scan
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Running_Scan
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyScan
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM17_IRQHandler
</UL>

<P><STRONG><a name="[21]"></a>piddecayfun</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, sys.o(.text.piddecayfun))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = piddecayfun
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sys.o(.text.UserPIDInit)
</UL>
<P><STRONG><a name="[dd]"></a>reloadSysStateFromFlash</STRONG> (Thumb, 84 bytes, Stack size 416 bytes, sys.o(.text.reloadSysStateFromFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 564<LI>Call Chain = reloadSysStateFromFlash &rArr; saveSysStateToFlash &rArr; Flash_Write_Alignment64 &rArr; HAL_FLASH_Program &rArr; FLASH_Program_Fast
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;saveSysStateToFlash
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkSysStateCrcValid
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[0]"></a>saveSysStateToFlash</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, sys.o(.text.saveSysStateToFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = saveSysStateToFlash &rArr; Flash_Write_Alignment64 &rArr; HAL_FLASH_Program &rArr; FLASH_Program_Fast
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRC_Calculate
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftWDOG_Disable
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write_Alignment64
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reloadSysStateFromFlash
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sys.o(.data.flashWriteWDOG)
</UL>
<P><STRONG><a name="[f2]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[f3]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[f4]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[3f]"></a>CRC_Handle_16</STRONG> (Thumb, 100 bytes, Stack size 20 bytes, stm32g0xx_hal_crc.o(.text.CRC_Handle_16))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = CRC_Handle_16
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRC_Calculate
</UL>

<P><STRONG><a name="[3e]"></a>CRC_Handle_8</STRONG> (Thumb, 230 bytes, Stack size 24 bytes, stm32g0xx_hal_crc.o(.text.CRC_Handle_8))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CRC_Handle_8
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRC_Calculate
</UL>

<P><STRONG><a name="[55]"></a>LL_RCC_GetAPB1Prescaler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32g0xx_hal_rcc.o(.text.LL_RCC_GetAPB1Prescaler))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
</UL>

<P><STRONG><a name="[44]"></a>FLASH_Program_DoubleWord</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, stm32g0xx_hal_flash.o(.text.FLASH_Program_DoubleWord))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FLASH_Program_DoubleWord
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Program
</UL>

<P><STRONG><a name="[45]"></a>FLASH_Program_Fast</STRONG> (Thumb, 124 bytes, Stack size 36 bytes, stm32g0xx_hal_flash.o(.text.FLASH_Program_Fast))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = FLASH_Program_Fast
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Program
</UL>

<P><STRONG><a name="[62]"></a>SysTick_Config</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, stm32g0xx_hal_cortex.o(.text.SysTick_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SysTick_Config &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
</UL>

<P><STRONG><a name="[4d]"></a>__NVIC_EnableIRQ</STRONG> (Thumb, 40 bytes, Stack size 4 bytes, stm32g0xx_hal_cortex.o(.text.__NVIC_EnableIRQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
</UL>

<P><STRONG><a name="[4e]"></a>__NVIC_SetPriority</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, stm32g0xx_hal_cortex.o(.text.__NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Config
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>

<P><STRONG><a name="[6a]"></a>TIM_ITRx_SetConfig</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, stm32g0xx_hal_tim.o(.text.TIM_ITRx_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_ITRx_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
</UL>

<P><STRONG><a name="[7a]"></a>TIM_OC1_SetConfig</STRONG> (Thumb, 236 bytes, Stack size 20 bytes, stm32g0xx_hal_tim.o(.text.TIM_OC1_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_OC1_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_ConfigChannel
</UL>

<P><STRONG><a name="[7c]"></a>TIM_OC3_SetConfig</STRONG> (Thumb, 264 bytes, Stack size 20 bytes, stm32g0xx_hal_tim.o(.text.TIM_OC3_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_OC3_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_ConfigChannel
</UL>

<P><STRONG><a name="[7d]"></a>TIM_OC4_SetConfig</STRONG> (Thumb, 172 bytes, Stack size 20 bytes, stm32g0xx_hal_tim.o(.text.TIM_OC4_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_OC4_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_ConfigChannel
</UL>

<P><STRONG><a name="[7e]"></a>TIM_OC5_SetConfig</STRONG> (Thumb, 160 bytes, Stack size 20 bytes, stm32g0xx_hal_tim.o(.text.TIM_OC5_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_OC5_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_ConfigChannel
</UL>

<P><STRONG><a name="[7f]"></a>TIM_OC6_SetConfig</STRONG> (Thumb, 160 bytes, Stack size 20 bytes, stm32g0xx_hal_tim.o(.text.TIM_OC6_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_OC6_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_ConfigChannel
</UL>

<P><STRONG><a name="[69]"></a>TIM_TI1_ConfigInputStage</STRONG> (Thumb, 80 bytes, Stack size 20 bytes, stm32g0xx_hal_tim.o(.text.TIM_TI1_ConfigInputStage))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_TI1_ConfigInputStage
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
</UL>

<P><STRONG><a name="[6b]"></a>TIM_TI2_ConfigInputStage</STRONG> (Thumb, 84 bytes, Stack size 20 bytes, stm32g0xx_hal_tim.o(.text.TIM_TI2_ConfigInputStage))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_TI2_ConfigInputStage
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
</UL>

<P><STRONG><a name="[6e]"></a>TIM_TI2_SetConfig</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, stm32g0xx_hal_tim.o(.text.TIM_TI2_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TIM_TI2_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_ConfigChannel
</UL>

<P><STRONG><a name="[6f]"></a>TIM_TI3_SetConfig</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, stm32g0xx_hal_tim.o(.text.TIM_TI3_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TIM_TI3_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_ConfigChannel
</UL>

<P><STRONG><a name="[70]"></a>TIM_TI4_SetConfig</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, stm32g0xx_hal_tim.o(.text.TIM_TI4_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TIM_TI4_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_ConfigChannel
</UL>

<P><STRONG><a name="[3a]"></a>GetPage</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, flash.o(.text.GetPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = GetPage
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write_Alignment64
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
